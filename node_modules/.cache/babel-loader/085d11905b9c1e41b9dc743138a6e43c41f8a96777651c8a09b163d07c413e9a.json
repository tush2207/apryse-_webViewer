{"ast":null,"code":"import _regeneratorRuntime from \"/home/v2stech/Desktop/apryse _webViewer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/v2stech/Desktop/apryse _webViewer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/v2stech/Desktop/apryse _webViewer/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport WebViewer from \"@pdftron/webviewer\";\nimport { green, red } from \"@mui/material/colors\";\nimport { WEB_VIEWER_ENTITIES } from \"../config/constants\";\nvar useFileComparator = function useFileComparator(ComparatorViewerRef) {\n  _s();\n  useEffect(function () {\n    WebViewer({\n      path: WEB_VIEWER_ENTITIES.PATH,\n      licenseKey: WEB_VIEWER_ENTITIES.LICENSE_KEY,\n      fullAPI: true,\n      disableMultiViewerComparison: true // Disable default compare buttons\n    }, ComparatorViewerRef === null || ComparatorViewerRef === void 0 ? void 0 : ComparatorViewerRef.current).then(function (instance) {\n      var UI = instance.UI,\n        Core = instance.Core;\n      var Annotations = Core.Annotations;\n      var Color = Annotations.Color;\n\n      // 1. Event listener to wait for the multi-viewer to be ready\n      UI === null || UI === void 0 ? void 0 : UI.addEventListener(UI.Events.MULTI_VIEWER_READY, function () {\n        // 2. Get the document viewers for both sides of the comparison\n        var _Core$getDocumentView = Core.getDocumentViewers(),\n          _Core$getDocumentView2 = _slicedToArray(_Core$getDocumentView, 2),\n          viewDocumentOne = _Core$getDocumentView2[0],\n          viewDocumentTwo = _Core$getDocumentView2[1];\n\n        // 3. Function to start the comparison\n        var compareFiles = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            var shouldCompare, afterColor, beforeColor, options, _yield$viewDocumentOn, docOneAnnotations, doc2Annotations, diffCount;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  // 4. Check if both documents are loaded before comparing\n                  shouldCompare = (viewDocumentOne === null || viewDocumentOne === void 0 ? void 0 : viewDocumentOne.getDocument()) && (viewDocumentTwo === null || viewDocumentTwo === void 0 ? void 0 : viewDocumentTwo.getDocument());\n                  if (!shouldCompare) {\n                    _context.next = 14;\n                    break;\n                  }\n                  // 5. Define the colors for highlighting differences\n                  afterColor = new Color(green[300]);\n                  beforeColor = new Color(red[300]);\n                  options = {\n                    beforeColor: beforeColor,\n                    afterColor: afterColor\n                  }; // 6. Start the semantic diff and get the annotation differences\n                  _context.next = 7;\n                  return viewDocumentOne === null || viewDocumentOne === void 0 ? void 0 : viewDocumentOne.startSemanticDiff(viewDocumentTwo, options);\n                case 7:\n                  _yield$viewDocumentOn = _context.sent;\n                  docOneAnnotations = _yield$viewDocumentOn.docOneAnnotations;\n                  doc2Annotations = _yield$viewDocumentOn.doc2Annotations;\n                  diffCount = _yield$viewDocumentOn.diffCount;\n                  // 7. You can use the annotation differences as needed\n                  console.log(\"Annotation Differences on Document 1:\", docOneAnnotations);\n                  console.log(\"Annotation Differences on Document 2:\", doc2Annotations);\n                  console.log(\"Total Differences Found:\", diffCount);\n                case 14:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          return function compareFiles() {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        // 8. Add documentLoaded event listeners to both viewers to trigger the comparison\n        viewDocumentOne === null || viewDocumentOne === void 0 ? void 0 : viewDocumentOne.addEventListener(\"documentLoaded\", compareFiles);\n        viewDocumentTwo === null || viewDocumentTwo === void 0 ? void 0 : viewDocumentTwo.addEventListener(\"documentLoaded\", compareFiles);\n\n        // // 9. Load the documents to be compared\n        // viewDocumentOne?.loadDocument(\n        //   process.env.PUBLIC_URL + \"/files/Agreement-Purchase-MBRS-project.pdf\"\n        // );\n        // viewDocumentTwo?.loadDocument(\n        //   process.env.PUBLIC_URL + \"/files/Agreement-Purchase-MBRS-project.pdf\"\n        // );\n      });\n\n      // 10. Enable the multi-viewer mode\n      UI.enableFeatures([UI.Feature.MultiViewerMode]);\n    });\n  }, [ComparatorViewerRef]);\n  return ComparatorViewerRef;\n};\n_s(useFileComparator, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useFileComparator;","map":{"version":3,"names":["useEffect","WebViewer","green","red","WEB_VIEWER_ENTITIES","useFileComparator","ComparatorViewerRef","_s","path","PATH","licenseKey","LICENSE_KEY","fullAPI","disableMultiViewerComparison","current","then","instance","UI","Core","Annotations","Color","addEventListener","Events","MULTI_VIEWER_READY","_Core$getDocumentView","getDocumentViewers","_Core$getDocumentView2","_slicedToArray","viewDocumentOne","viewDocumentTwo","compareFiles","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","shouldCompare","afterColor","beforeColor","options","_yield$viewDocumentOn","docOneAnnotations","doc2Annotations","diffCount","wrap","_callee$","_context","prev","next","getDocument","startSemanticDiff","sent","console","log","stop","apply","arguments","enableFeatures","Feature","MultiViewerMode"],"sources":["/home/v2stech/Desktop/apryse _webViewer/src/components/FileComparator/useFileComparator.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nimport WebViewer from \"@pdftron/webviewer\";\n\nimport { green, red } from \"@mui/material/colors\";\n\nimport { WEB_VIEWER_ENTITIES } from \"../config/constants\";\n\nconst useFileComparator = (ComparatorViewerRef) => {\n  useEffect(() => {\n    WebViewer(\n      {\n        path: WEB_VIEWER_ENTITIES.PATH,\n        licenseKey: WEB_VIEWER_ENTITIES.LICENSE_KEY,\n        fullAPI: true,\n        disableMultiViewerComparison: true, // Disable default compare buttons\n      },\n      ComparatorViewerRef?.current\n    ).then((instance) => {\n      const { UI, Core } = instance;\n      const { Annotations } = Core;\n      const { Color } = Annotations;\n\n      // 1. Event listener to wait for the multi-viewer to be ready\n      UI?.addEventListener(UI.Events.MULTI_VIEWER_READY, () => {\n        // 2. Get the document viewers for both sides of the comparison\n        const [viewDocumentOne, viewDocumentTwo] = Core.getDocumentViewers();\n\n        // 3. Function to start the comparison\n        const compareFiles = async () => {\n          // 4. Check if both documents are loaded before comparing\n          const shouldCompare =\n            viewDocumentOne?.getDocument() && viewDocumentTwo?.getDocument();\n\n          if (shouldCompare) {\n            // 5. Define the colors for highlighting differences\n            const afterColor = new Color(green[300]);\n            const beforeColor = new Color(red[300]);\n\n            const options = { beforeColor, afterColor };\n\n            // 6. Start the semantic diff and get the annotation differences\n            const { docOneAnnotations, doc2Annotations, diffCount } =\n              await viewDocumentOne?.startSemanticDiff(\n                viewDocumentTwo,\n                options\n              );\n\n            // 7. You can use the annotation differences as needed\n            console.log(\n              \"Annotation Differences on Document 1:\",\n              docOneAnnotations\n            );\n            console.log(\n              \"Annotation Differences on Document 2:\",\n              doc2Annotations\n            );\n            console.log(\"Total Differences Found:\", diffCount);\n          }\n        };\n\n        // 8. Add documentLoaded event listeners to both viewers to trigger the comparison\n        viewDocumentOne?.addEventListener(\"documentLoaded\", compareFiles);\n        viewDocumentTwo?.addEventListener(\"documentLoaded\", compareFiles);\n\n        // // 9. Load the documents to be compared\n        // viewDocumentOne?.loadDocument(\n        //   process.env.PUBLIC_URL + \"/files/Agreement-Purchase-MBRS-project.pdf\"\n        // );\n        // viewDocumentTwo?.loadDocument(\n        //   process.env.PUBLIC_URL + \"/files/Agreement-Purchase-MBRS-project.pdf\"\n        // );\n      });\n\n      // 10. Enable the multi-viewer mode\n      UI.enableFeatures([UI.Feature.MultiViewerMode]);\n    });\n  }, [ComparatorViewerRef]);\n\n  return ComparatorViewerRef;\n};\n\nexport default useFileComparator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}